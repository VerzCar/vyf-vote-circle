type Circle {
    id: ID!
    name: String!
    description: String!
    imageSrc: String!
    voters: [CircleVoter!]!
    private: Boolean!
    active: Boolean!
    createdFrom: String!
    validUntil: Time
}

input CircleUpdateInput {
    name: String
    description: String
    imageSrc: String
    voters: [CircleVoterInput!]
    private: Boolean
    validUntil: Time
}

input CircleCreateInput {
    name: String!
    description: String
    imageSrc: String
    voters: [CircleVoterInput!]!
    private: Boolean
    validUntil: Time
}

extend type Query {
    circle(id: ID!): Circle!
}

extend type Mutation {
    updateCircle(id: ID!, circleUpdateInput: CircleUpdateInput!): Circle!
    createCircle(circleCreateInput: CircleCreateInput!): Circle!
}